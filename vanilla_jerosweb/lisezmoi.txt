src/main.js :

import { router } from './router.js';
import './components/sidebar.js';
import './components/leaflet-map.js';
// Importe les autres Web Components

// Charge les librairies locales si besoin
import '/public/libs/geolib/geolib.min.js';
import '/public/libs/turf/turf.min.js';
// etc.


Merci pour le lien vers ton dépôt ! Après une analyse rapide du code, voici une stratégie claire et adaptée pour convertir ton site PHP en Vanilla JS + Web Components + Router, en gardant toutes les pages et fonctionnalités, et en utilisant Vite pour le bundling.

1. Analyse du projet actuel
Ton dépôt contient :

Des pages PHP avec des require/include.
Des librairies locales (/commun/js/libs/).
Des pages spécifiques (CV, SVG, Leaflet, etc.).
Des scripts JS et CSS locaux.

→ Objectif :
Remplacer les require PHP par un routing côté client (Navigo), utiliser des Web Components pour les éléments réutilisables (sidebar, header, etc.), et bundler le tout avec Vite.

2. Structure proposée pour le nouveau projet
 Copier/mon-projet/
├── public/
│   ├── libs/          # Copie de /commun/js/libs/
│   ├── assets/        # Images, fonts, etc.
│   └── css/           # CSS globaux (si besoin)
├── src/
│   ├── components/    # Web Components (sidebar, map, etc.)
│   │   ├── sidebar.js
│   │   ├── leaflet-map.js
│   │   └── ...
│   ├── pages/         # Pages (HTML + JS)
│   │   ├── home/
│   │   │   ├── index.html
│   │   │   └── index.js
│   │   ├── cv/
│   │   │   ├── index.html
│   │   │   └── index.js
│   │   └── ...
│   ├── router.js      # Gestion du routing
│   ├── main.js        # Point d'entrée
│   └── styles/        # CSS
├── index.html         # Fichier HTML principal
├── package.json
└── vite.config.js

3. Étapes de conversion détaillées

a. Initialisation du projet Vite
 Copiernpm create vite@latest mon-projet-vanilla -- --template vanilla
cd mon-projet-vanilla
npm install navigo
npm install  # Installe les dépendances

b. Copier les librairies locales
Copie le contenu de /commun/js/libs/ dans /public/libs/.

c. Créer les Web Components
Exemple : Sidebar
src/components/sidebar.js :
 Copierclass Sidebar extends HTMLElement {
  connectedCallback() {
    this.innerHTML = `
      <aside class="sidebar">
        <nav>
          <ul>
            <li><a href="/">Accueil</a></li>
            <li><a href="/cv">CV</a></li>
            <li><a href="/svg">SVG</a></li>
            <!-- Ajoute les autres liens -->
          </ul>
        </nav>
      </aside>
    `;
  }
}

customElements.define('app-sidebar', Sidebar);
Exemple : Leaflet Map
src/components/leaflet-map.js :
 Copierclass LeafletMap extends HTMLElement {
  connectedCallback() {
    this.innerHTML = `<div id="map" style="height: 400px;"></div>`;
    this.loadMap();
  }

  loadMap() {
    // Ici, tu peux copier/coller ton code Leaflet existant
    const map = L.map('map').setView([51.505, -0.09], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);
  }
}

customElements.define('leaflet-map', LeafletMap);

d. Créer les pages
Exemple : Page d'accueil
src/pages/home/index.html :
 Copier<h1>Bienvenue sur mon site</h1>
<app-sidebar></app-sidebar>
<div class="content">
  <!-- Contenu spécifique -->
</div>
src/pages/home/index.js :
 Copierexport function render() {
  return fetch('/pages/home/index.html')
    .then(res => res.text())
    .then(html => {
      document.getElementById('app').innerHTML = html;
      // Initialise les composants ou scripts spécifiques
    });
}

e. Configurer le router
src/router.js :
 Copierimport { Navigo } from 'navigo';
import { render as renderHome } from './pages/home/index.js';
import { render as renderCV } from './pages/cv/index.js';
// Importe les autres pages

const router = new Navigo('/');

router.on({
  '/': renderHome,
  '/cv': renderCV,
  '/svg': () => import('./pages/svg/index.js').then(m => m.render()),
  '*': () => console.log('404')
}).resolve();

export { router };

f. Point d'entrée (main.js)
src/main.js :
 Copierimport { router } from './router.js';
import './components/sidebar.js';
import './components/leaflet-map.js';
// Importe les autres Web Components

// Charge les librairies locales si besoin
import '/public/libs/geolib/geolib.min.js';
import '/public/libs/turf/turf.min.js';
// etc.

g. Fichier index.html
index.html :
 Copier<!DOCTYPE html>
<html>
<head>
  <title>Mon Site</title>
  <link rel="stylesheet" href="/css/style.css">
  <!-- Librairies CDN (jQuery, Bootstrap, etc.) -->
  <script src="https://code.jquery.com/jquery-3.6.0.slim.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
  <div id="app"></div>
  <script type="module" src="/src/main.js"></script>
</body>
</html>

h. Configuration Vite
vite.config.js :
 Copierimport { defineConfig } from 'vite';

export default defineConfig({
  root: 'src',
  build: {
    outDir: '../dist',
    emptyOutDir: true,
    rollupOptions: {
      input: '/index.html'
    }
  }
});

4. Conversion des pages spécifiques
a. Page CV

Crée src/pages/cv/index.html et src/pages/cv/index.js.
Utilise un Web Component pour le contenu dynamique.

b. Page SVG

Idem, avec un Web Component pour les animations SVG.

c. Page Leaflet

Utilise le Web Component leaflet-map créé plus haut.

Gestion des librairies locales
Pour les librairies comme autocomplete, interact, etc. :

Si disponible sur npm : Installe-les (npm install interactjs notyf).
Sinon : Charge-les via <script> dans index.html ou importe-les dynamiquement dans main.js :
 Copierimport '/public/libs/autocomplete/autocomplete.min.js';





 page 1:


        <script src="./commun/js/libs/autocomplete/autocomplete.min.js"></script>
        <script src="./commun/js/libs/geolib/geolib.min.js"></script>
        <script src="./commun/js/libs/turf/turf.min.js"></script>
        <script src="./commun/js/libs/notify/notyf.min.js"></script>
        <script src="./commun/js/libs/drag/interact.min.js"></script>
        <script src="./commun/js/libs/velocity/velocity.min.js"></script>
        <script src="./commun/js/libs/velocity/velocity.ui.min.js"></script>
        <script src="./commun/js/libs/gsap/gsap.min.js"></script>
        <script src="./commun/js/libs/gsap/TweenMax.min.js"></script>
        <script src="./commun/js/libs/gsap/Draggable.min.js"></script>
        <script src="./commun/js/libs/snowflakes/snowflakes.min.js"></script>
        <script src="./01_page_svg/app/color.min.js"></script>
        <script src="./01_page_svg/app/main.min.js"></script>