let renderer=new THREE.WebGLRenderer,scene=new THREE.Scene,aspect=window.innerWidth/window.innerHeight,camera=new THREE.PerspectiveCamera(45,aspect,.1,1500),cameraRotation=0,cameraRotationSpeed=.001,cameraAutoRotation=!0,orbitControls=new THREE.OrbitControls(camera),spotLight=new THREE.SpotLight(16777215,1,0,10,2),textureLoader=new THREE.TextureLoader,planetProto={sphere:function(e){let t=new THREE.SphereGeometry(e,32,32);return t},material:function(e){let t=new THREE.MeshPhongMaterial;if(e)for(var a in e)t[a]=e[a];return t},glowMaterial:function(e,t,a){let r=new THREE.ShaderMaterial({uniforms:{c:{type:"f",value:e},p:{type:"f",value:t},glowColor:{type:"c",value:new THREE.Color(a)},viewVector:{type:"v3",value:camera.position}},vertexShader:"\n        uniform vec3 viewVector;\n        uniform float c;\n        uniform float p;\n        varying float intensity;\n        void main() {\n          vec3 vNormal = normalize( normalMatrix * normal );\n          vec3 vNormel = normalize( normalMatrix * viewVector );\n          intensity = pow( c - dot(vNormal, vNormel), p );\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }",fragmentShader:"\n        uniform vec3 glowColor;\n        varying float intensity;\n        void main() \n        {\n          vec3 glow = glowColor * intensity;\n          gl_FragColor = vec4( glow, 1.0 );\n        }",side:THREE.BackSide,blending:THREE.AdditiveBlending,transparent:!0});return r},texture:function(e,t,a){let r=new THREE.TextureLoader;r.crossOrigin=!0,r.load(a,function(a){e[t]=a,e.needsUpdate=!0})}},createPlanet=function(e){let t=planetProto.sphere(e.surface.size),a=planetProto.material(e.surface.material),r=new THREE.Mesh(t,a),o=planetProto.sphere(e.surface.size+e.atmosphere.size),n={side:THREE.DoubleSide,transparent:!0},i=Object.assign(n,e.atmosphere.material),s=planetProto.material(i),c=new THREE.Mesh(o,s),l=planetProto.sphere(e.surface.size+e.atmosphere.size+e.atmosphere.glow.size),m=planetProto.glowMaterial(e.atmosphere.glow.intensity,e.atmosphere.glow.fade,e.atmosphere.glow.color),d=new THREE.Mesh(l,m),u=new THREE.Object3D;r.name="surface",c.name="atmosphere",d.name="atmosphericGlow",u.add(r),u.add(c),u.add(d);for(let t in e.surface.textures)planetProto.texture(a,t,e.surface.textures[t]);for(let t in e.atmosphere.textures)planetProto.texture(s,t,e.atmosphere.textures[t]);return u},earth=createPlanet({surface:{size:.5,material:{bumpScale:.05,specular:new THREE.Color("grey"),shininess:10},textures:{map:"https://s3-us-west-2.amazonaws.com/s.cdpn.io/141228/earthmap1k.jpg",bumpMap:"https://s3-us-west-2.amazonaws.com/s.cdpn.io/141228/earthbump1k.jpg",specularMap:"https://s3-us-west-2.amazonaws.com/s.cdpn.io/141228/earthspec1k.jpg"}},atmosphere:{size:.003,material:{opacity:.8},textures:{map:"https://s3-us-west-2.amazonaws.com/s.cdpn.io/141228/earthcloudmap.jpg",alphaMap:"https://s3-us-west-2.amazonaws.com/s.cdpn.io/141228/earthcloudmaptrans.jpg"},glow:{size:.02,intensity:.7,fade:7,color:9687023}}}),markerProto={latLongToVector3:function(e,t,a,r){var o=e*Math.PI/180,n=(t-180)*Math.PI/180,i=-(a+r)*Math.cos(o)*Math.cos(n),s=(a+r)*Math.sin(o),c=(a+r)*Math.cos(o)*Math.sin(n);return new THREE.Vector3(i,s,c)},marker:function(e,t,a){let r=new THREE.SphereGeometry(e),o=new THREE.MeshLambertMaterial({color:t}),n=new THREE.Mesh(r,o);return n.position.copy(a),n}},placeMarker=function(e,t){let a=markerProto.latLongToVector3(t.latitude,t.longitude,t.radius,t.height),r=markerProto.marker(t.size,t.color,a);e.add(r)},placeMarkerAtAddress=function(e,t){let a=e.replace(/\s/g,"+"),r=new XMLHttpRequest;r.open("GET","https://maps.googleapis.com/maps/api/geocode/json?address="+a),r.send(null),r.onreadystatechange=function(){if(4==r.readyState&&200==r.status){let e=JSON.parse(r.responseText);if(e.results.length>0){let a=e.results[0].geometry.location.lat,r=e.results[0].geometry.location.lng;placeMarker(earth.getObjectByName("surface"),{latitude:a,longitude:r,radius:.5,height:0,size:.01,color:t})}}}},galaxyGeometry=new THREE.SphereGeometry(100,32,32),galaxyMaterial=new THREE.MeshBasicMaterial({side:THREE.BackSide}),galaxy=new THREE.Mesh(galaxyGeometry,galaxyMaterial);textureLoader.crossOrigin=!0,textureLoader.load("https://s3-us-west-2.amazonaws.com/s.cdpn.io/141228/starfield.png",function(e){galaxyMaterial.map=e,scene.add(galaxy)}),renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement),camera.position.set(1,1,1),orbitControls.enabled=!cameraAutoRotation,scene.add(camera),scene.add(spotLight),scene.add(earth),spotLight.position.set(2,0,1),earth.receiveShadow=!0,earth.castShadow=!0,earth.getObjectByName("surface").geometry.center(),window.addEventListener("resize",function(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)});let render=function(){earth.getObjectByName("surface").rotation.y+=3125e-7,earth.getObjectByName("atmosphere").rotation.y+=625e-6,cameraAutoRotation&&(cameraRotation+=cameraRotationSpeed,camera.position.y=0,camera.position.x=2*Math.sin(cameraRotation),camera.position.z=2*Math.cos(cameraRotation),camera.lookAt(earth.position)),requestAnimationFrame(render),renderer.render(scene,camera)};render();var gui=new dat.GUI,guiCamera=gui.addFolder("Camera"),guiSurface=gui.addFolder("Surface"),guiMarkers=guiSurface.addFolder("Markers"),guiAtmosphere=gui.addFolder("Atmosphere"),guiAtmosphericGlow=guiAtmosphere.addFolder("Glow"),cameraControls=new function(){this.speed=cameraRotationSpeed,this.orbitControls=!cameraAutoRotation},surfaceControls=new function(){this.rotation=0,this.bumpScale=.05,this.shininess=10},markersControls=new function(){this.address="",this.color=16711680,this.placeMarker=function(){placeMarkerAtAddress(this.address,this.color)}},atmosphereControls=new function(){this.opacity=.8},atmosphericGlowControls=new function(){this.intensity=.7,this.fade=7,this.color=9687023};guiCamera.add(cameraControls,"speed",0,.1).step(.001).onChange(function(e){cameraRotationSpeed=e}),guiCamera.add(cameraControls,"orbitControls").onChange(function(e){cameraAutoRotation=!e,orbitControls.enabled=e}),guiSurface.add(surfaceControls,"rotation",0,6).onChange(function(e){earth.getObjectByName("surface").rotation.y=e}),guiSurface.add(surfaceControls,"bumpScale",0,1).step(.01).onChange(function(e){earth.getObjectByName("surface").material.bumpScale=e}),guiSurface.add(surfaceControls,"shininess",0,30).onChange(function(e){earth.getObjectByName("surface").material.shininess=e}),guiMarkers.add(markersControls,"address"),guiMarkers.addColor(markersControls,"color"),guiMarkers.add(markersControls,"placeMarker"),guiAtmosphere.add(atmosphereControls,"opacity",0,1).onChange(function(e){earth.getObjectByName("atmosphere").material.opacity=e}),guiAtmosphericGlow.add(atmosphericGlowControls,"intensity",0,1).onChange(function(e){earth.getObjectByName("atmosphericGlow").material.uniforms.c.value=e}),guiAtmosphericGlow.add(atmosphericGlowControls,"fade",0,50).onChange(function(e){earth.getObjectByName("atmosphericGlow").material.uniforms.p.value=e}),guiAtmosphericGlow.addColor(atmosphericGlowControls,"color").onChange(function(e){earth.getObjectByName("atmosphericGlow").material.uniforms.glowColor.value.setHex(e)});